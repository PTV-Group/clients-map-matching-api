/* tslint:disable */
/* eslint-disable */
/**
 * Map Matching
 * With the Map Matching service you can assign GPS positions to road segments on a digital map.
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Detailed information about a continuous part of a matched track.
 * @export
 * @interface MatchedPath
 */
export interface MatchedPath {
    /**
     * The distance [m] of the complete matched path.
     * @type {number}
     * @memberof MatchedPath
     */
    distance: number;
    /**
     * The index in the list of trackPositions of the start position of this path. It is available only if the list of trackPositions is requested by MatchedTrackResults.TRACK_POSITIONS.
     * @type {number}
     * @memberof MatchedPath
     */
    startTrackPositionIndex?: number;
    /**
     * The index in the list of trackPositions of the end position of this path. It is available only if the list of trackPositions is requested by MatchedTrackResults.TRACK_POSITIONS.
     * @type {number}
     * @memberof MatchedPath
     */
    endTrackPositionIndex?: number;
    /**
     * The ID of the route for this path. It is available only if it is requested by MatchedTrackResults.ROUTE_ID. This route ID can be used as an input paramater in a calculateRoute request at the Routing API.
     * @type {string}
     * @memberof MatchedPath
     */
    routeId?: string;
}

export function MatchedPathFromJSON(json: any): MatchedPath {
    return MatchedPathFromJSONTyped(json, false);
}

export function MatchedPathFromJSONTyped(json: any, ignoreDiscriminator: boolean): MatchedPath {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'distance': json['distance'],
        'startTrackPositionIndex': !exists(json, 'startTrackPositionIndex') ? undefined : json['startTrackPositionIndex'],
        'endTrackPositionIndex': !exists(json, 'endTrackPositionIndex') ? undefined : json['endTrackPositionIndex'],
        'routeId': !exists(json, 'routeId') ? undefined : json['routeId'],
    };
}

export function MatchedPathToJSON(value?: MatchedPath | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'distance': value.distance,
        'startTrackPositionIndex': value.startTrackPositionIndex,
        'endTrackPositionIndex': value.endTrackPositionIndex,
        'routeId': value.routeId,
    };
}

